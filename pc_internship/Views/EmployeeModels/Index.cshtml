@model PagedList.IPagedList<pc_internship.Models.EmployeeModel>
@using PagedList.Mvc;
@using pc_internship.GrossSalary
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Employees";
}

<h2>Employees</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "EmployeeModels", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            Darbuotojo vardas
        </th>
        <th>
            Darbuotojo pavardė
        </th>
        <th>
            Darbuotojo nuotrauka
        </th>
        <th>
            Darbuotojo atlyginimas "į rankas"
        </th>
        <th>
            Visas atlyginimas (prieš mokesčius)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.EmployeeName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EmployeeLastName)
        </td>
        <td>
        @if (Model != null && !String.IsNullOrEmpty(item.ImgPath)) { 
            <div width="60px" height="45px" overflow="hidden" border="1px solid black">
                <img width="100" min-height="100%" src="@Url.Content(item.ImgPath)" alt="" />
            </div>
        } else
        {
            <i>No photo</i>
        }
        </td>
        <td>
            @String.Format("{0:0.00}", item.EmployeeNetSalary)
        </td>
        <td>
            @GrossSalary.GetGrossSalary(item.EmployeeNetSalary)
    </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.EmployeeID }) |
            @Html.ActionLink("Details", "Details", new { id=item.EmployeeID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.EmployeeID })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { currentFilter = ViewBag.CurrentFilter, page }))
