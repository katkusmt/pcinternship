@model pc_internship.Models.EmployeeModel
@using pc_internship.GrossSalary

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "EmployeeModels", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EmployeeModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeID)

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeLastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeNetSalary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeNetSalary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeNetSalary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="file" class="control-label col-md-2">Nuotrauka</label>
            <div class="col-md-10">
                <input type="file" name="file" id="file" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @if (String.IsNullOrEmpty(Model.ImgPath))
            {
                <label class="control-label col-md-2">
                    Darbuotojo nuotrauka
                </label>
                <div class="col-md-10">
                    <i>No photo</i>
                </div>
            }
            else
            {
                @Html.LabelFor(model => model.ImgPath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img width="100" min-height="100%" src="@Url.Content(Model.ImgPath)" />
                </div>
            }
        </div>

        <div class="form-group">
            @Html.Label("Gross salary", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="cold-md-10">
                @GrossSalary.GetGrossSalary(Model.EmployeeNetSalary)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
